package pt.tecnico.bubbledocs.domain;

class Bubbledocs{
	Integer lastID;
}

class User{
	String password;
}

class Root extends User;

class Spreadsheet{
	DateTime createdAt;
	DateTime modifiedAt;
	Integer line;
	Integer column;
}

class Cell{
	Integer line;
	Integer column;
	Boolean protect;
}

class Content;

class Argument extends Content;

class Literal extends Argument{
	Integer value;
}

class Reference extends Argument;

class Function extends Content;

class BinaryFunction;

class Addiction;

class Subtraction;

class Division;

class Multiplication;


relation UserContainsSpreadsheet{
	User playsRole user;
	Spreadsheet playsRole Docs{
		multiplicity 0..*;
	}
}

relation SpreadsheetContainsUsers{
	Spreadsheet playsRole spreadsheet;
	User playsRole users{
		multiplicity 0..*;
		}
}

relation SpreadsheetContainsCell{
	Spreadsheet playsRole spreadsheet;
	Cell playsRole cells{
		multiplicity 0..*;}
}

relation CellContainsContent{
	Cell playsRole cell;
	Content playsRole content{
		multiplicity 0..1;}
}

relation BinaryFunctionContainsArgument{
	BinaryFunction playsRole binaryFunction;
	Argument playsRole operand1{
		multiplicity 1;}
	Argument playsRole operand2{
		multiplicity 1;}
	}

relation DomainRootHasBubbleApplication {
  .pt.ist.fenixframework.DomainRoot playsRole root {
    multiplicity 0..1;
  }
  Bubbledocs playsRole bubbledocs {
    multiplicity 0..1;
  }
}

relation BubbledocsContainsUser{
	Bubbledocs playsRole bubbledocs;
	User playsRole _users{
		multiplicity 0..*;
	}
}

relation BubbledocsContainsSpreadsheet{
	Bubbledocs playsRole bubbledocs;
	Spreadsheet playsRole _docs{
		multiplicity 0..*;
	}
}

relation ReferenceContainsCell{
	Reference playsRole reference;
	Cell playsRole cells{
		multiplicity 0..1;
	}
}